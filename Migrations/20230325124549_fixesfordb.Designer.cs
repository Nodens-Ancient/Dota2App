// <auto-generated />
using System;
using Dota2App.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dota2App.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230325124549_fixesfordb")]
    partial class fixesfordb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dota2App.DAL.Item.ItemAttribute", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ItemModelId")
                        .HasColumnType("int");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ItemModelId");

                    b.ToTable("ItemAttribute");
                });

            modelBuilder.Entity("Dota2App.DAL.Item.ItemAttributeValue", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ItemAttributeId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ItemAttributeId");

                    b.ToTable("ItemAttributeValue");
                });

            modelBuilder.Entity("Dota2App.Models.HeroModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<float>("AgilityGain")
                        .HasColumnType("float");

                    b.Property<int>("AttackRange")
                        .HasColumnType("int");

                    b.Property<float>("AttackSpeed")
                        .HasColumnType("float");

                    b.Property<int>("BaseAgility")
                        .HasColumnType("int");

                    b.Property<float>("BaseArmor")
                        .HasColumnType("float");

                    b.Property<int>("BaseAttackDamageMax")
                        .HasColumnType("int");

                    b.Property<int>("BaseAttackDamageMin")
                        .HasColumnType("int");

                    b.Property<int>("BaseHealth")
                        .HasColumnType("int");

                    b.Property<float>("BaseHealthRegen")
                        .HasColumnType("float");

                    b.Property<int>("BaseIntellect")
                        .HasColumnType("int");

                    b.Property<int>("BaseMagicResist")
                        .HasColumnType("int");

                    b.Property<int>("BaseMana")
                        .HasColumnType("int");

                    b.Property<float>("BaseManaRegen")
                        .HasColumnType("float");

                    b.Property<int>("BaseMoveSpeed")
                        .HasColumnType("int");

                    b.Property<int>("BaseStrength")
                        .HasColumnType("int");

                    b.Property<float>("DayVision")
                        .HasColumnType("float");

                    b.Property<float>("IntellectGain")
                        .HasColumnType("float");

                    b.Property<string>("MainAttribute")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("NightVision")
                        .HasColumnType("float");

                    b.Property<int>("ProjectileSpeed")
                        .HasColumnType("int");

                    b.Property<float>("StrengthGain")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Heroes");
                });

            modelBuilder.Entity("Dota2App.Models.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Dota2App.DAL.Item.ItemAttribute", b =>
                {
                    b.HasOne("Dota2App.Models.ItemModel", null)
                        .WithMany("AttributeBonuses")
                        .HasForeignKey("ItemModelId");
                });

            modelBuilder.Entity("Dota2App.DAL.Item.ItemAttributeValue", b =>
                {
                    b.HasOne("Dota2App.DAL.Item.ItemAttribute", null)
                        .WithMany("Values")
                        .HasForeignKey("ItemAttributeId");
                });

            modelBuilder.Entity("Dota2App.DAL.Item.ItemAttribute", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("Dota2App.Models.ItemModel", b =>
                {
                    b.Navigation("AttributeBonuses");
                });
#pragma warning restore 612, 618
        }
    }
}
